trigger:
- master

variables:
- name: PORT
  value: 3001

stages:
- stage: Build
  displayName: 'Build stage'
  pool:
    name: 'SelfHostedCruise'
  jobs:
  - job: Build
    displayName: 'Build'
    steps:
    - script: echo "##vso[task.setvariable variable=PORT]$(PORT)"
      displayName: 'Set port variable'

    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm install --save-dev nyc
        npm install --save-dev mocha-junit-reporter
      displayName: 'npm install and install dev dependencies'

    - script: |
        npx nyc npm test
      displayName: 'npm test with coverage'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false

    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifacts: drop'

- stage: Deploy
  displayName: 'Deploy stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy'
    environment: 
      name: 'Production'
      resourceType: 'WebApp'
      tags: 'webapp'
      properties:
        serviceConnection: 'Visual Studio Enterprise Subscription (131ca349-8b25-4fcd-b47d-2aca58898f7c)'
        appName: 'agba-devops-cruise'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Visual Studio Enterprise Subscription (131ca349-8b25-4fcd-b47d-2aca58898f7c)'
              appType: 'webAppLinux'
              WebAppName: 'agba-devops-cruise'
              packageForLinux: '$(Pipeline.Workspace)/drop/**/*.zip'
    approvals:
      - check:
          name: 'Pre-deployment approvals'
          type: 'Approval'
          approvers:
            - email: 'waladino@yahoo.com'
              displayName: 'Pre-deployment approver'
      - check:
          name: 'Azure Monitor Alert'
          type: 'InvokeRESTAPI'
          inputs:
            serviceConnection: 'Visual Studio Enterprise Subscription (131ca349-8b25-4fcd-b47d-2aca58898f7c)'
            headers: '{"Content-Type":"application/json"}'
            urlSuffix: '/subscriptions/131ca349-8b25-4fcd-b47d-2aca58898f7c/providers/Microsoft.AlertsManagement/alertsSummary?api-version=2019-05-05-preview'
            method: 'GET'
